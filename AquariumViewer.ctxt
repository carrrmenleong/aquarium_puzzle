#BlueJ class context
comment0.target=AquariumViewer
comment1.params=puzzle
comment1.target=AquariumViewer(Aquarium)
comment1.text=\r\n\ Main\ constructor\ for\ objects\ of\ class\ AquariumViewer.\r\n\ Sets\ all\ fields,\ and\ displays\ the\ initial\ puzzle.\r\n
comment10.params=
comment10.target=void\ displayAquariums()
comment10.text=\r\n\ Displays\ the\ aquariums.\r\n
comment11.params=
comment11.target=void\ displayButtons()
comment11.text=\r\n\ Displays\ the\ buttons\ below\ the\ grid.\r\n
comment12.params=r\ c
comment12.target=void\ updateSquare(int,\ int)
comment12.text=\r\n\ Updates\ the\ display\ of\ Square\ r,c.\ \r\n\ Sets\ the\ display\ of\ this\ square\ to\ whatever\ is\ in\ the\ squares\ array.\ \r\n
comment13.params=e
comment13.target=void\ mousePressed(java.awt.event.MouseEvent)
comment13.text=\r\n\ Responds\ to\ a\ mouse\ click.\ \r\n\ If\ it's\ on\ the\ board,\ make\ the\ appropriate\ move\ and\ update\ the\ screen\ display.\ \r\n\ If\ it's\ on\ SOLVED?,\ \ \ check\ the\ solution\ and\ display\ the\ result.\ \r\n\ If\ it's\ on\ CLEAR,\ \ \ \ \ clear\ the\ puzzle\ and\ update\ the\ screen\ display.\ \r\n
comment14.params=e
comment14.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment15.params=e
comment15.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment16.params=e
comment16.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment17.params=e
comment17.target=void\ mouseExited(java.awt.event.MouseEvent)
comment2.params=n
comment2.target=AquariumViewer(int)
comment2.text=\r\n\ Selects\ from\ among\ the\ provided\ files\ in\ folder\ Examples.\ \r\n\ xyz\ selects\ axy_z.txt.\ \r\n
comment3.params=
comment3.target=AquariumViewer()
comment3.text=\r\n\ Uses\ the\ provided\ example\ file\ on\ the\ LMS\ page.\r\n
comment4.params=
comment4.target=Aquarium\ getPuzzle()
comment4.text=\r\n\ Returns\ the\ current\ state\ of\ the\ puzzle.\r\n
comment5.params=
comment5.target=int\ getSize()
comment5.text=\r\n\ Returns\ the\ size\ of\ the\ puzzle.\r\n
comment6.params=
comment6.target=SimpleCanvas\ getCanvas()
comment6.text=\r\n\ Returns\ the\ current\ state\ of\ the\ canvas.\r\n
comment7.params=
comment7.target=void\ displayPuzzle()
comment7.text=\r\n\ Displays\ the\ initial\ puzzle;\ see\ the\ LMS\ page\ for\ the\ format.\r\n
comment8.params=
comment8.target=void\ displayGrid()
comment8.text=\r\n\ Displays\ the\ grid\ in\ the\ middle\ of\ the\ window.\r\n
comment9.params=
comment9.target=void\ displayNumbers()
comment9.text=\r\n\ Displays\ the\ numbers\ around\ the\ grid.\r\n
numComments=18
